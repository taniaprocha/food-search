{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { useState } from \"react\";\nexport default function useForm() {\n  _s2();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      formValues = _useState2[0],\n      setFormValues = _useState2[1];\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    setFormValues(_objectSpread(_objectSpread({}, formValues), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  return {\n    handleChange: handleChange,\n    formValues: formValues\n  };\n}\n\n_s2(useForm, \"HaAN28vQIwcytciUCVbzfu1nIYg=\");","map":{"version":3,"sources":["/Users/taniarocha/Documents/taniarocha/personal/food-search/frontend/hooks/useForm.js"],"names":["useState","useForm","formValues","setFormValues","handleChange","event","persist","target","name","value"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAAA,kBACID,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,MACzBE,UADyB;AAAA,MACbC,aADa;;AAGhC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9BA,IAAAA,KAAK,CAACC,OAAN;AAEAH,IAAAA,aAAa,iCAAMD,UAAN,2BAAmBG,KAAK,CAACE,MAAN,CAAaC,IAAhC,EAAuCH,KAAK,CAACE,MAAN,CAAaE,KAApD,GAAb;AACD,GAJD;;AAMA,SAAO;AACLL,IAAAA,YAAY,EAAZA,YADK;AAELF,IAAAA,UAAU,EAAVA;AAFK,GAAP;AAID;;IAbuBD,O","sourcesContent":["import { useState } from \"react\";\n\nexport default function useForm() {\n  const [formValues, setFormValues] = useState({});\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setFormValues({ ...formValues, [event.target.name]: event.target.value });\n  };\n\n  return {\n    handleChange,\n    formValues,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}